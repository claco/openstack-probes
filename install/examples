 {
 "id": "agent.cpu_usage_average",
 "label": "CPU Usage",
 "description": "Alarm which returns CRITICAL, WARNING or OK based upon average CPU usage",
 "check_type": "agent.cpu",
 "criteria": "if (metric['usage_average'] &gt; ${critical_threshold}) {\n return new AlarmStatus(CRITICAL, 'CPU usage is #{usage_average}%, above your critical threshold of ${critical_threshold}%');\n}\n\nif (metric['usage_average'] &gt; ${warning_threshold}) {\n return new AlarmStatus(WARNING, 'CPU usage is #{usage_average}%, above your warning threshold of ${warning_threshold}%');\n}\n\nreturn new AlarmStatus(OK, 'CPU usage is #{usage_average}%, below your warning threshold of ${warning_threshold}%');\n",
 "fields": [
 {
 "name": "critical_threshold",
 "description": "CPU usage percentage above which CRITICAL is returned",
 "type": "whole number (may be zero padded)"
 },
 {
 "name": "warning_threshold",
 "description": "CPU usage percentage above which WARNING is returned",
 "type": "whole number (may be zero padded)"
 }
 ]
 },

 {
 "id": "agent.memory_usage",
 "label": "Memory usage",
 "description": "Alarm which returns CRITICAL, WARNING or OK based upon memory usage",
 "check_type": "agent.memory",
 "criteria": "if (percentage(metric['actual_used'], metric['total']) &gt; 90) {\n return new AlarmStatus(CRITICAL, \"Memory usage is above your critical threshold of 90%\");\n}\n\nif (percentage(metric['actual_used'], metric['total']) &gt; 80) {\n return new AlarmStatus(WARNING, \"Memory usage is above your warning threshold of 80%\");\n}\n\nreturn new AlarmStatus(OK, \"Memory usage is below your warning threshold of 80%\");\n",
 "fields": []
 },
 {
 "id": "agent.filesystem_usage",
 "label": "Filesystem usage",
 "description": "Alarm which returns CRITICAL, WARNING or OK based upon filesystem usage",
 "check_type": "agent.filesystem",
 "criteria": "if (percentage(metric['used'], metric['total']) &gt; 90) {\n return new AlarmStatus(CRITICAL, \"Disk usage is above your critical threshold of 90%\");\n}\n\nif (percentage(metric['used'], metric['total']) &gt; 80) {\n return new AlarmStatus(WARNING, \"Disk usage is above your warning threshold of 80%\");\n}\n\nreturn new AlarmStatus(OK, \"Disk usage is below your warning threshold of 80%\");\n",
 "fields": []
 },
 {
 "id": "agent.high_load_average",
 "label": "High Load Average",
 "description": "Alarm which returns CRITICAL, WARNING or OK based on load average",
 "check_type": "agent.load_average",
 "criteria": "if (metric['5m'] &gt; ${critical_threshold}) {\n return new AlarmStatus(CRITICAL, '5 minute load average is #{5m}, above your critical threshold of ${critical_threshold}');\n}\n\nif (metric['5m'] &gt; ${warning_threshold}) {\n return new AlarmStatus(WARNING, '5 minute load average is #{5m}, above your warning threshold of ${warning_threshold}');\n}\n\nreturn new AlarmStatus(OK, '5 minute load average is #{5m}, below your warning threshold of ${warning_threshold}');\n",
 "fields": [
 {
 "name": "critical_threshold",
 "description": "Load average above which CRITICAL is returned",
 "type": "whole number (may be zero padded)"
 },
 {
 "name": "warning_threshold",
 "description": "Load average above which WARNING is returned",
 "type": "whole number (may be zero padded)"
 }
 ]
 },
 {
 "id": "agent.network_transmit_rate",
 "label": "Network transmit rate",
 "description": "Alarm which returns CRITICAL, WARNING or OK based upon network transmit rate",
 "check_type": "agent.network",
 "criteria": "if (rate(metric['tx_bytes']) &gt; ${critical_threshold}) {\n return new AlarmStatus(CRITICAL, \"Network transmit rate on ${interface} is above your critical threshold of ${critical_threshold}B/s\");\n}\n\nif (rate(metric['tx_bytes']) &gt; ${warning_threshold}) {\n return new AlarmStatus(WARNING, \"Network transmit rate on ${interface} is above your warning threshold of ${warning_threshold}B/s\");\n}\n\nreturn new AlarmStatus(OK, \"Network transmit rate on ${interface} is below your warning threshold of ${warning_threshold}B/s\");\n",
 "fields": [
 {
 "name": "interface",
 "description": "The network interface to alert on",
 "type": "string"
 },
 {
 "name": "critical_threshold",
 "description": "Network transmit rate, in bytes per second, above which CRITICAL is returned",
 "type": "whole number (may be zero padded)"
 },
 {
 "name": "warning_threshold",
 "description": "Network transmit rate, in bytes per second, above which WARNING is returned",
 "type": "whole number (may be zero padded)"
 }
 ]
 },
 {
 "id": "agent.network_receive_rate",
 "label": "Network receive rate",
 "description": "Alarm which returns CRITICAL, WARNING or OK based upon network receive rate",
 "check_type": "agent.network",
 "criteria": "if (rate(metric['rx_bytes']) &gt; ${critical_threshold}) {\n return new AlarmStatus(CRITICAL, \"Network receive rate on ${interface} is above your critical threshold of ${critical_threshold}B/s\");\n}\n\nif (rate(metric['rx_bytes']) &gt; ${warning_threshold}) {\n return new AlarmStatus(WARNING, \"Network receive rate on ${interface} is above your warning threshold of ${warning_threshold}B/s\");\n}\n\nreturn new AlarmStatus(OK, \"Network receive rate on ${interface} is below your warning threshold of ${warning_threshold}B/s\");\n",
 "fields": [
 {
 "name": "interface",
 "description": "The network interface to alert on",
 "type": "string"
 },
 {
 "name": "critical_threshold",
 "description": "Network receive rate, in bytes per second, above which CRITICAL is returned",
 "type": "whole number (may be zero padded)"
 },
 {
 "name": "warning_threshold",
 "description": "Network receive rate, in bytes per second, above which WARNING is returned",
 "type": "whole number (may be zero padded)"
 }
 ]
 },
 {
 "id": "agent.mysql_threads_connected_threshold",
 "label": "Connected Threads",
 "description": "Alarm which returns WARNING if the threads connected is over the specified threshold and OK if it is under the specified threshold.",
 "check_type": "agent.mysql",
 "criteria": "if (metric['threads.connected'] &gt; ${threads.connected.threshold}) {\n\treturn new AlarmStatus(WARNING, 'Total number of threads connected are above your threshold of ${threads.connected.threshold}');\n}\nreturn new AlarmStatus(OK, 'Total number of threads connected are below your warning threshold of ${threads.connected.threshold}');\n",
 "fields": [
 {
 "name": "threads.connected.threshold",
 "description": "Warning threshold for the number of connections",
 "type": "whole number (may be zero padded)"
 }
 ]
 }
 ],
 "metadata": {
 "count": 18,
 "limit": null,
 "marker": null,
 "next_marker": null,
 "next_href": null
 }
 }
